language: java
matrix:
  include:
    - os: linux
      language: android
      jdk: oraclejdk8
      android:
        components:
          - tools
          - build-tools-25.0.2
          - android-24
          - android-25
          - platform-tools-25
            # - extra-android-support
            # - extra-android-m2repository
            # - extra-google-m2repository
          - sys-img-armeabi-v7a-android-21
        licenses:
          - '.+'
    - os: osx
      env: ANDROID_HOME=/usr/local/opt/android-sdk
      osx_image: xcode8
addons:
    apt:
        packages:
          - python
          - python-dev
          - python3
          - python3-dev

sudo: required

before_install: rm -rf /home/travis/.nvm

install:
  - git clone https://github.com/jkozera/libwally-core.git -b wip_js
  - ./libwally-core/tools/travis_install.sh
  # Brew on macOS has up to date SWIG already:
  - bash -c '[ "$TRAVIS_OS_NAME" = "osx" ] || (wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz && tar -zxf swig-3.0.12.tar.gz && cd swig-3.0.12 && ./configure && make && sudo make install)'
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ./build_macos.sh;
      elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        ./build_linux.sh;
      fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        python websockify/run 39741 localhost:39742 &
        touch output && (
           ( socat -u TCP-LISTEN:39742,reuseaddr OPEN:output ) &
           ( tail -f output | while read LOGLINE; do [[ "${LOGLINE}" == "DONE" ]] && (pkill socat; pkill tail); done ) &
        );
        cordova run ios &&
        (tail -f ~/Library/Logs/CoreSimulator/*/system.log &) &&
        (tail -f output || true) &&
        [[ $(grep ^fail output | wc -l | sed 's. *..') == 0 ]];
      elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        cordova build android &&
        (emulator -avd test -no-audio -no-window &) &&
        android-wait-for-emulator &&
        (adb shell input keyevent 82 &) &&
        (cordova run android &);
        (
            adb logcat 2>&1 | (while read LOGLINE; do echo $LOGLINE; (echo $LOGLINE | grep DONE) && (adb pull /data/data/io.cordova.hellocordova/console.log.txt && pkill adb); done)
        );
        cat console.log.txt &&
        [[ $(grep ^fail console.log.txt | wc -l | sed 's. *..') == 0 ]];
      fi
